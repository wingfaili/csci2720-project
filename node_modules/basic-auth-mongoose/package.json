{
  "_args": [
    [
      "basic-auth-mongoose@^0.1.1",
      "/Users/fai/Desktop/csci2720project"
    ]
  ],
  "_from": "basic-auth-mongoose@>=0.1.1 <0.2.0",
  "_id": "basic-auth-mongoose@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/basic-auth-mongoose",
  "_npmUser": {
    "email": "thauburger@gmail.com",
    "name": "thauburger"
  },
  "_npmVersion": "1.1.66",
  "_phantomChildren": {},
  "_requested": {
    "name": "basic-auth-mongoose",
    "raw": "basic-auth-mongoose@^0.1.1",
    "rawSpec": "^0.1.1",
    "scope": null,
    "spec": ">=0.1.1 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/basic-auth-mongoose/-/basic-auth-mongoose-0.1.1.tgz",
  "_shasum": "c74de184a3c8e2c4cf5e0b7241977ffb2f8c9b83",
  "_shrinkwrap": null,
  "_spec": "basic-auth-mongoose@^0.1.1",
  "_where": "/Users/fai/Desktop/csci2720project",
  "author": {
    "email": "thauburger@gmail.com",
    "name": "Tom Hauburger"
  },
  "bugs": {
    "url": "https://github.com/thauburger/basic-auth-mongoose/issues/new"
  },
  "dependencies": {},
  "description": "Mongoose plugin for password-based user authentication.",
  "devDependencies": {
    "mongoose": "3.4.x"
  },
  "directories": {},
  "dist": {
    "shasum": "c74de184a3c8e2c4cf5e0b7241977ffb2f8c9b83",
    "tarball": "http://registry.npmjs.org/basic-auth-mongoose/-/basic-auth-mongoose-0.1.1.tgz"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "homepage": "https://github.com/thauburger/basic-auth-mongoose#readme",
  "keywords": [
    "auth",
    "authentication",
    "basic",
    "login",
    "mongodb",
    "mongoose",
    "password",
    "plugin",
    "register",
    "user",
    "username"
  ],
  "main": "./index.js",
  "maintainers": [
    {
      "name": "thauburger",
      "email": "thauburger@gmail.com"
    }
  ],
  "name": "basic-auth-mongoose",
  "optionalDependencies": {},
  "readme": "#basic-auth-mongoose\n\nBasic-auth is a [Mongoose](http://mongoosejs.com/) [plugin](http://mongoosejs.com/docs/plugins.html) that provides password-based user authentication for your Mongoose [schema](http://mongoosejs.com/docs/guide.html).\n\nBasic-auth provides:\n\n- Required `username` and `password` properties\n- A simple `authenticate` method to use when signing users into your service\n- Automatic password encryption\n- Framework agnostic authentication and storage. Use it with Express, Passport, or on it's own.\n\n\n##Installation\n\n\t$ npm install basic-auth-mongoose\n\nTested with Mongoose > 3.4.x.\n\n##Usage\n\n###Mongoose Plugin\n\nBasic-auth allows you to add password-based authentication to any Mongoose schema. Let's say you're working on a site where your basic `User` schema is shaping up like so:\n\n````javascript\nvar mongoose = require('mongoose');\n\nvar userSchema = new mongoose.Schema({\n\temail : String,\n\tfirst : String,\n\tlast  : String,\n});\n````\n\nTo add authentication functionality, all you need to do is plugin basic-auth, and create your new `User` model:\n\n````javascript\nuserSchema.plugin(require('basic-auth-mongoose'));\nvar User = mongoose.model('User', userSchema);\n````\n\n####Authentication Properties\n\nPlugging in basic-auth will add two required properties on top of your original `User` schema: `username` and `password`. Just fill in those credentials when you're creating a user, and the user's password will be automatically encrypted for secure storage.\n\n````javascript\nvar tom = new User({\n\temail : 'tom@test.com',\n\tfirst : 'Tom',\n\tlast  : 'Smith',\n\tusername : 'toms1234',\n\tpassword : 'secret'\n});\n\ntom.save(function (err, user) {\n\tif (err) // handle\n\telse {\n\t\tconsole.log('User is saved and password is encrypted!!');\n\t}\n});\n````\n\n####Methods\n\nIn addition to the `username` and `password` properties, you'll also get a handy `user.authenticate(password)` method. This method accepts a plain text password, and will return `true` if the password is correct, and `false` otherwise.\n\n````javascript\nUser.findOne({'username' : 'toms1234'}, function (err, tom) {\n\tif (err) // handle\n\telse {\n\t\ttom.authenticate('wrong-password'); // returns false\n\t\ttom.authenticate('secret'); // returns true\n\t}\n});\n````\n\n####Sugar\n\nUsing basic-auth will also give you an `id` property, which will return the auto-generated MongoDB `_id`. To use, simply call:\n\n````javascript\ntom.id  // returns MongoDB _id (e.g. 5A0009284I2)\n````\n\n###Options\n\nYou can configure the hashing algorithm used to encrypt the user's password. By default, basic-auth uses `'sha256'\n`. To change the encryption method, simply pass in the `encryptionMethod` option when applying basic-auth:\n\n````javascript\nvar options = { 'encryptionMethod' : 'sha1' };\nuserSchema.plugin(require('basic-auth', options));\n````\n\nYou are free to choose any of the hashing algorithms made available by Node's [crypto](http://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm) library. \nExamples are `sha1`, `sha256`,`sha512`,`md5`.\n\n###Examples\n\nA full example of using basic-auth for a simple login / registration system is coming soon.\n\n###Contributions\n\nInspired by [saintedlama](https://github.com/saintedlama/passport-local-mongoose)'s passport-local-mongoose module.\n\nAlso, thanks to [alexyoung](https://github.com/alexyoung) for his [Nodepad tutorial](http://dailyjs.com/2010/12/06/node-tutorial-5/) on Daily JS. This module reuses some of the password encryption techniques found there.\n\n###License (GPL)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see http://www.gnu.org/licenses/.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/thauburger/basic-auth-mongoose.git"
  },
  "version": "0.1.1"
}
